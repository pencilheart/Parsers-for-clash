parsers: # array
  - reg: ^.*$ 
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  # 下面是删除服务商自带的策略组和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 
  # 建立自己的配置
    yaml:
      prepend-proxy-groups: # 建立策略组
      - {name: 🥷PROXY, type: fallback, url: http://www.google.com/generate_204, interval: 300, proxies: [🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国]}
      - {name: 👨‍💻Github, type: select, proxies: [🥷PROXY, DIRECT, 🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      - {name: 🚅Google, type: select, proxies: [🥷PROXY, DIRECT, 🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      - {name: 🔍Bing, type: select, proxies: [🥷PROXY, DIRECT, 🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      - {name: 🤖OpenAI, type: select, proxies: [🇺🇸美国, 🥷PROXY, DIRECT, 🇭🇰香港, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      - {name: 📽GlobalMedia, type: select, proxies: [🥷PROXY, DIRECT, 🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      - {name: 🐟漏网之鱼, type: select, proxies: [DIRECT, 🥷PROXY, 🇭🇰香港, 🇺🇸美国, 🐳台湾, 🇯🇵日本, 🇸🇬新加坡, 🇰🇷韩国, 👨‍🎤其他节点]}
      
      - {name: 🇭🇰香港, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 🇺🇸美国, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 🐳台湾, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 🇯🇵日本, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 🇸🇬新加坡, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 🇰🇷韩国, type: url-test, url: http://www.google.com/generate_204, interval: 300}
      - {name: 👨‍🎤其他节点, type: url-test, url: http://www.google.com/generate_204, interval: 300}
              
  # 策略组示例
      # - name: 分组名
        # type: select       # 手动选点   
        # url-test     # 自动选择延迟最低的节点
        # fallback     # 节点故障时自动切换下一个
        # laod-balance # 均衡使用分组内的节点
        # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
        # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
        # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
        # proxies:  
          # - 节点名称或其他分组套娃
          
      commands:
        - proxy-groups.🥷PROXY.proxies.0+[]proxyNames|港|香港|🇭🇰|HK|Hong Kong|美|美国|🇺🇸|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States# 向指定策略组添加订阅中的节点名，可使用正则过滤
        - proxy-groups.🇭🇰香港.proxies=[]proxyNames|港|香港|🇭🇰|HK|Hong Kong # 向指定策略组添加订阅中的节点名，可使用正则过滤
        - proxy-groups.🇺🇸美国.proxies=[]proxyNames|美|美国|🇺🇸|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States
        - proxy-groups.🐳台湾.proxies=[]proxyNames|台|台湾|新北|彰化|TW|Taiwan
        - proxy-groups.🇯🇵日本.proxies=[]proxyNames|日|日本|🇯🇵|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan
        - proxy-groups.🇰🇷韩国.proxies=[]proxyNames|韩|韓|韩国|🇰🇷|KR|Korea|KOR|首尔
        - proxy-groups.🇸🇬新加坡.proxies=[]proxyNames|新加坡|🇸🇬|坡|狮城|SG|Singapore
        - proxy-groups.👨‍🎤其他节点.proxies=[]proxyNames|^[^香日台新韩美]*$ # 这个可以自定义，这个正则的意思是排除节点名字有“香日台新韩美”的节点。
        - mixed-port=7890

       # 为各个策略组添加一个DIRECT，避免机场节点无法匹配上面的正则筛选而导致配置出错。应该有其他办法避免，但是我不会。
        - proxy-groups.🇭🇰香港.proxies.0+REJECT
        - proxy-groups.🇺🇸美国.proxies.0+REJECT
        - proxy-groups.🐳台湾.proxies.0+REJECT
        - proxy-groups.🇯🇵日本.proxies.0+REJECT
        - proxy-groups.🇰🇷韩国.proxies.0+REJECT
        - proxy-groups.🇸🇬新加坡.proxies.0+REJECT
        - proxy-groups.👨‍🎤其他节点.proxies.0+REJECT

        # - proxy-groups.节点名字.proxies.0+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
        # 更多正则教程，请看这里：https://deerchao.cn/tutorials/regex/regex.htm#top
        
  # 添加规则
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        # pencilheart自用
        - DOMAIN-KEYWORD,appstorrent,DIRECT #appstorrent官网
        - DOMAIN,vk.com,DIRECT #appstorrent下载
        - DOMAIN,psv4.userapi.com,DIRECT #appstorrent下载网盘
        - DOMAIN,sun6-23.userapi.com,DIRECT #appstorrent下载网盘

        - DOMAIN-KEYWORD,shapr3d,DIRECT
        - DOMAIN-KEYWORD,sci-hub,DIRECT
        - DOMAIN-KEYWORD,zotero.org,DIRECT
        - DOMAIN-KEYWORD,jsdelivr,DIRECT #规则集

        - DOMAIN-KEYWORD,iyf,📽GlobalMedia #爱壹帆视频

        - DOMAIN,www.v2ex.com,🥷PROXY
        - DOMAIN-KEYWORD,amysecure,🥷PROXY
        # - DOMAIN,community.visualdatatools.com,🥷PROXY #Datagraph社区
        - DOMAIN,dergipark.org.tr,🥷PROXY #学术
        - DOMAIN-KEYWORD,flow3d,🥷PROXY #FLOW3D
        - DOMAIN,www.editor.citationstyles.org,🥷PROXY #CSL-style-edit
        - DOMAIN-KEYWORD,olympus-ims.com,🥷PROXY #3D共聚焦官网
        - DOMAIN,macked.app,🥷PROXY #破解软件网站
        - DOMAIN,haxmac.cc,🥷PROXY #破解软件网站
        - DOMAIN,gitup.co,🥷PROXY #gitup软件主页


        # 代码库
        - RULE-SET,notion,DIRECT
        - RULE-SET,apple,DIRECT
        - RULE-SET,chinamax,DIRECT
        - RULE-SET,GlobalMedia,📽GlobalMedia
        - RULE-SET,openai,🤖OpenAI
        - RULE-SET,bing,🔍Bing
        - RULE-SET,github,👨‍💻Github
        - RULE-SET,google,🚅Google
        - GEOIP,,DIRECT
        - GEOIP,CN,DIRECT
        - RULE-SET,global,🥷PROXY
        - MATCH,🐟漏网之鱼 # ⭐️⭐️规则之外的，具体在“🐟漏网之鱼”选择代理或直连。

      # 添加规则集
        # DOMAIN-SUFFIX：域名后缀匹配
        # DOMAIN：域名匹配
        # DOMAIN-KEYWORD：域名关键字匹配
        # IP-CIDR：IP段匹配
        # SRC-IP-CIDR：源IP段匹配
        # GEOIP：GEOIP数据库（国家代码）匹配
        # DST-PORT：目标端口匹配
        # SRC-PORT：源端口匹配
        # PROCESS-NAME：源进程名匹配
        # RULE-SET：Rule Provider规则匹配
        # MATCH：全匹配

  # 添加规则集
      mix-rule-providers: 


        global: # 全球代理域名列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Global/Global_Classical.yaml"
          path: ./ruleset/global.yaml
          interval: 86400


        GlobalMedia: # 国外流媒体
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml"
          path: ./ruleset/GlobalMedia.yaml
          interval: 86400


        google: # Google域名列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml"
          path: ./ruleset/google.yaml
          interval: 86400   
          
          
        chinamax: # 中国大陆直连列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml"
          path: ./ruleset/chinamax.yaml
          interval: 86400
         

        apple: # Apple域名列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml"
          path: ./ruleset/apple.yaml
          interval: 86400 

        bing: # Bing的分流规则
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Bing/Bing.yaml"
          path: ./ruleset/bing.yaml
          interval: 86400

        openai: # OpenAI的分流规则
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml"
          path: ./ruleset/openai.yaml
          interval: 86400  

        github: # github的分流规则
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml"
          path: ./ruleset/github.yaml
          interval: 86400    

        notion: # notion的分流规则
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Notion/Notion.yaml"
          path: ./ruleset/github.yaml
          interval: 86400  
